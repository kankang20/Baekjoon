
""" 골드 2. 청소년 상어 """ 

"""
공간
- 4x4 크기
- 1x1인 정사각형으로 나누어져 있음 : 16칸

물고기
- 한 칸에는 물고기 한마리가 존재
- 각 물고기는 번호와 방향을 가짐
    - 같은 번호를 같는 경우는 없음
    - 상하좌우, 대각선 : 8가지 방향
    
청소년 상어
1. 시작 
- (0,0)에 있는 물고기를 먹음 
- 그 물고기와 동일한 방향을 갖게 됨

2. 물고기 이동
- 번호가 작은 물고기부터 순서대로 이동
- 물고기는 한 칸을 이동 가능
- 이동 가능한 방향으로 향할 때까지 물고기 방향을 45도 반시계 회전
    - 빈칸, 다른 물고기가 있는 칸으로 이동 가능
    - 상어가 있거나 공간의 경계를 넘는 경우는 이동 불가능
    - 다른 물고기가 있는 칸으로 이동할 떄는 서로의 위치를 바꾸는 방식으로 이동
- 이동할 수 없는 칸이 없으면 이동하지 않음 

3. 상어 이동
- 방향에 맞춰 한 번에 여러 개의 칸으로 이동 가능
- 물고기가 없는 칸으로 이동 불가능
- 물고기가 있는 칸으로 이동했다면, 
    - 그 칸에 있는 물고기를 먹고 물고기의 방향을 가짐
    - 이동하는 중에 지나가는 칸에 있는 물고기는 먹지 않음
- 상어가 이동할 수 있는 칸이 없으면 다시 물고기가 이동

"""

import sys


dr = [-1, -1, 0, 1, 1, 1, 0, -1]    # ↑, ↖, ←, ↙, ↓, ↘, →, ↗
dc = [0, -1, -1, -1, 0, 1, 1, 1]

def solution():

    input = sys.stdin.readline

    sea = [[] * 4 for _ in range(4)]
    for i in range(4):
        temp = list(map(int, input().split()))
        for j in range(0, 8, 2):
            sea[i].append((temp[j], temp[j+1]))

    print(sea)
        

solution()

